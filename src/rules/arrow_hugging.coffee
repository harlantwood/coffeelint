module.exports = class ArrowHugging

    rule:
        name: 'arrow_hugging'
        level: 'ignore'
        message: 'Function arrows (-> and =>) must hug parens before them'
        description: '''
            <p>This rule checks to see that there is *no* spacing before,
            and there must be spacing after,
            the arrow operator that declares a function. This rule is disabled
            by default.</p> <p>Note that if arrow_hugging is enabled, and you
            pass an empty function as a parameter, arrow_hugging will accept
            either a space or no space in-between the arrow operator and the
            parenthesis</p>
            <pre><code># None of these will trigger an error,
            # even with arrow_spacing enabled.
            x(-> 3)
            x( -> 3)
            x((a,b)-> 3)

            # However, this will trigger an error
            x((a,b) -> 3)
            </code>
            </pre>
             '''

    tokens: ['->', '=>']

    lintToken: (token, tokenApi) ->
        # Throw error if any of the following:
        #
        # 1. Space between a close paren and a function arrow token: )-> or )=>
        # 2. The token wasn't generated by the CoffeeScript compiler
        # 3. There is *no* space after the function arrow token

        pp = tokenApi.peek(-1)

        return unless pp

        # Ignore empty functions
        if not token.spaced and
                tokenApi.peek(1)[0] is 'INDENT' and
                tokenApi.peek(2)[0] is 'OUTDENT'
            null
        else if (pp[1] is ')' and pp.spaced? and not pp.generated?) or #1 & #2
               not (token.spaced? or token.newLine?) #3
            true
        else
            null
